name: Buid and Deploy Resources to Docker Hub

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: The image tag
        default: latest
      terraform-actions:
          type: choice
          description: 'Select an action to perform'
          options:
            - apply
            - destroy
          required: true
          default: apply

  push:
    branches:
      - main
permissions:
      id-token: write
      contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        # uses: azure/login@v1
        # with:
        #   client-id: ${{ secrets.AZURE_CLIENT_ID }}
        #   tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        #   subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az account show
  docker:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push latest
        if: ${{ !github.event.inputs.tag}}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: oluchioraekwe/taskmanager:latest

      - name: Build and push tag
        if: ${{ github.event.inputs.tag}}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: oluchioraekwe/taskmanager:${{ github.event.inputs.tag}}

  deploy-to-aks:
    needs: docker
    runs-on: ubuntu-latest
        
    steps:
      - name: Check out to repo
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: task-rg
          cluster-name: taskcluster

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'development'
          manifests: |
             k8sconfig/app.yaml
             k8sconfig/autoscaler.yaml
          images: oluchioraekwe/taskmanager:latest
          pull-images: false

      - name: Update Deployment with latest image
        if: ${{ !github.event.inputs.tag}}
        run: |
          kubectl set image deployment/taskmanager-app taskmanager-app=oluchioraekwe/taskmanager:latest -n development
          echo "Updating aks cluster with latest image"

      - name: Update Deployment with latest image
        if: ${{ github.event.inputs.tag}}
        run: |
          kubectl set image deployment/taskmanager-app taskmanager-app=oluchioraekwe/taskmanager:${{ github.event.inputs.tag}} -n development
          echo "Updating aks cluster with latest tag"
    